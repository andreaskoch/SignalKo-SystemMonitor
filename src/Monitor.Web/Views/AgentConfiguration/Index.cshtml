@model dynamic

@{
	ViewBag.Title = "Agent Configuration";
}

<section class="middleContent" id="configBody">
	<section class="agent-configuration">

		<section class="global">

			<header>
				<h2>Global Configuration</h2>
			</header>

			<label for="SystemInformationSenderHostaddress">Hostaddress</label>
			<input type="text" placeholder="https://10.1.2.3 or http://www.example.com" id="SystemInformationSenderHostaddress" data-bind="value: Hostaddress" />

			<label for="SystemInformationSenderHostname">Hostname</label>
			<input type="text" placeholder="www.example.com" id="SystemInformationSenderHostname" data-bind="value: Hostname" />

			<label for="SystemInformationSenderPath">SystemInformationSenderPath</label>
			<input type="text" id="SystemInformationSenderPath" data-bind="value: SystemInformationSenderPath" />

			<label for="SystemInformationSenderCheckInterval">Check-interval (in seconds)</label>
			<input type="text" id="SystemInformationSenderCheckInterval" data-bind="value: CheckIntervalInSeconds" />

			<section class="agentStatusSwitch">
				<input type="radio" value="true" data-bind="checked: AgentsAreEnabled.ForEditing" />
				<label>Agents are enabled</label>

				<input type="radio" value="false" data-bind="checked: AgentsAreEnabled.ForEditing" />
				<label>Agents are disabled</label>
			</section>

		</section>
		
		<section class="agent-specific">
			<header>
				<h2>Agent Configuration</h2>
			</header>
			
			<ul class="agents" data-bind="foreach: AgentInstanceConfigurations">
				<li>
					<header>
						<h3 data-bind="text: MachineName"></h3>
					</header>
					
					<section class="settings">

						<section class="agentStatusSwitch">
							<input type="radio" value="true" data-bind="checked: AgentIsEnabled.ForEditing" title="Click to enable this agent" />
							<label>Agent is enabled</label>

							<input type="radio" value="false" data-bind="checked: AgentIsEnabled.ForEditing" title="Click to disable this agent" />
							<label>Agent is disabled</label>
						</section>

						<section class="collectorRepository">
							<header>Available Collector Types</header>
							<ul data-bind="foreach: AvailableCollectorTypes">
								<li>
									<span data-bind="text: $data"></span>
									<i class="icon-plus-sign" title="Click to add collector" data-bind="click: $parent.AddCollectorDefinition.bind($data)"></i>
								</li>
							</ul>
						</section>

						<section class="collectorDefinitions">
							<header>Collector Definitions</header>

							<ul data-bind="foreach: CollectorDefinitions">
								<li>
									<header>
										<span data-bind="text: CollectorType"></span>
										<i class="icon-minus-sign" title="Click to remove collector" data-bind="click: $parent.RemoveCollectorDefinition.bind($data)"></i>
									</header>

									<!-- ko if: CollectorType == 'System Information' -->
									<section class="collectorDefinition systemInformation">
										<label>Checkinterval (in seconds)</label>
										<input class="checkInterval" type="range" min="1" max="10" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalInSeconds"></span>
									</section>
									<!-- /ko -->
									
									<!-- ko if: CollectorType == 'HTTP Status Code Check' -->
									<section class="collectorDefinition httpStatusCodeCheck">
										<label>URL</label>
										<input class="urlToCheck" type="text" placeholder="http://10.0.2.14/start-page" data-bind="value: CheckUrl" />
										
										<label>Hostheader</label>
										<input class="hostHeader" type="text" placeholder="example.com" data-bind="value: Hostheader" />
										
										<label>Expected HTTP Status Code</label>
										<input class="expectedStatusCode" type="text" placeholder="200" data-bind="value: ExpectedStatusCode" />
										
										<label>Checkinterval (in seconds)</label>
										<input class="checkInterval" type="range" min="1" max="10" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalInSeconds"></span>
									</section>
									<!-- /ko -->
									
									<!-- ko if: CollectorType == 'Web Page Content Check' -->
									<section class="collectorDefinition webPageContentCheck">
										<label>URL</label>
										<input class="urlToCheck" type="text" placeholder="http://10.0.2.14/start-page" data-bind="value: CheckUrl" />
										
										<label>Hostheader</label>
										<input class="hostHeader" type="text" placeholder="example.com" data-bind="value: Hostheader" />
										
										<label>Regular Expression</label>
										<input class="checkPattern" type="text" placeholder="Cart Content contains \d item" data-bind="value: CheckPattern" />
										
										<label>Checkinterval (in seconds)</label>
										<input class="checkInterval" type="range" min="1" max="10" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalInSeconds"></span>
									</section>
									<!-- /ko -->
									
									<!-- ko if: CollectorType == 'Response Time Check' -->
									<section class="collectorDefinition responseTimeCheck">
										<label>URL</label>
										<input type="text" placeholder="http://10.0.2.14/start-page" data-bind="value: CheckUrl" />
										
										<label>Hostheader</label>
										<input type="text" placeholder="example.com" data-bind="value: Hostheader" />
										
										<label>Max response time (in milliseconds)</label>
										<input type="range" min="1" max="20000" data-bind="value: MaxResponseTimeInMilliseconds" />
										<span data-bind="text: MaxResponseTimeInMilliseconds"></span>
										
										<label>Checkinterval (in seconds)</label>
										<input class="checkInterval" type="range" min="1" max="10" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalInSeconds"></span>
									</section>
									<!-- /ko -->
								</li>
							</ul>
						</section>

					</section>
				</li>
			</ul>
		</section>
		
		<section class="commands">
			<button class="button btnLoad" data-bind="click: LoadConfiguration">Load</button>
			<button class="button btnSave" data-bind="click: SaveConfiguration">Save</button>
		</section>

	</section>
</section>

@section CustomScripts {
	<script type="text/javascript">
		var agentConfigurationOptions = {
			KnownAgents: @Html.Raw(this.ViewBag.AgentsJSON),
			AgentConfigurationApiUrl: '/api/agentconfiguration',
			SuccessCallback: function (message) {
				console.info(message);
			},
			ErrorCallback: function (message) {
				console.warn(message);
			}
		};
	</script>
	<script type="text/javascript" src="@Links.Scripts.Systemmonitor_AgentConfiguration_js"></script>
}
