@model dynamic

@{
	ViewBag.Title = "Agent Configuration";
}

@section SubNavigation {
	<section class="contextMenu">
		<div class="machines">
			<label>Machines:</label>
			<ul data-bind="foreach: AgentInstanceConfigurations">
				<li><a data-bind="attr: { href: '#' + MachineName }"><span data-bind="text: MachineName"></span></a></li>
			</ul>
		</div>
		
		<div class="actions">
			<label>Actions:</label>
			<button class="button btnSave" data-bind="click: SaveConfiguration" title="Save all changes"><i class="icon-save"></i><span class="text">Save</span></button>
		</div>
	</section>
}

<section class="content agent-configuration">

	<section class="global" id="global">

		<header>
			<h2>Global Configuration</h2>
		</header>
		
		<div class="inputRow">
			<label title="Enable or Disable the data collection on all agent instances.">Status</label>

			<div class="switches">
				<div class="switch" title="Enable data collection. But please be aware that you have to activate each agent individually as well.">
					<input type="radio" value="true" data-bind="checked: AgentsAreEnabled.ForEditing" />
					<label>Agents are enabled</label>
				</div>
				
				<div class="switch" title="Disable data collection for all agents. Note: this will disable all agents, even if the specific agent instances are enabled.">
					<input type="radio" value="false" data-bind="checked: AgentsAreEnabled.ForEditing" />
					<label>Agents are disabled</label>
				</div>
			</div>
		</div>
		
		<div class="inputRow" title="The base address of the system information API (examples: http://10.0.0.10:8080, https://monitoring.example.com).">
			<label>Hostaddress</label>
			<input type="text" placeholder="https://10.1.2.3 or http://www.example.com" id="SystemInformationSenderHostaddress" data-bind="value: Hostaddress" />
		</div>
		
		<div class="inputRow" title="The host header to use for the HTTP request (default: &lt;empty&gt;).">
			<label>Hostheader</label>
			<input type="text" placeholder="www.example.com" id="SystemInformationSenderHostname" data-bind="value: Hostname" />
		</div>
		
		<div class="inputRow" title="The path to the system information API (example: /api/systeminformation).">
			<label>System Information API Url</label>
			<input type="text" placeholder="/api/systeminformation" id="SystemInformationSenderPath" data-bind="value: SystemInformationSenderPath" />
		</div>
		
		<div class="inputRow" title="The interval in which the agents will check for a new agent configuration.">
			<label>Check interval</label>
			<input type="range" min="10" max="360" data-bind="value: CheckIntervalInSeconds" />
			<span data-bind="text: CheckIntervalHumanReadable"></span>
		</div>

	</section>
		
	<section class="agent-specific">
		<header>
			<h2>Agent Instance Configurations</h2>
		</header>
		
		<section>
			<label>Add a new agent instance configuration</label>

			<input type="text" list="unlistedMachinenames"/>
			<datalist id="unlistedMachinenames" data-bind="foreach: UnconfiguredAgents">
				<option data-bind="text: $data"></option>
			</datalist>
			
			<i class="icon-plus-sign"></i>
		</section>
			
		<ul class="agents" data-bind="foreach: AgentInstanceConfigurations">
			<li class="agent">
				<div data-bind="attr: { id: MachineName }" class="agentAnchor"></div>
				<header>
					<h3 data-bind="text: MachineName"></h3>
				</header>
					
				<section class="agent-settings">
					
					<div class="inputRow agent-status">
						<label title="Enable or Disable the data collection for this agent.">Status</label>

						<div class="switches">
							<div class="switch" title="Enable data collection for this agent.">
								<input type="radio" value="true" data-bind="checked: AgentIsEnabled.ForEditing" title="Click to enable this agent" />
								<label>Agent is enabled</label>
							</div>
						
							<div class="switch"  title="Disable data collection for this agent.">
								<input type="radio" value="false" data-bind="checked: AgentIsEnabled.ForEditing" title="Click to disable this agent" />
								<label>Agent is disabled</label>
							</div>
						</div>
					</div>

					<section class="collectorRepository">
						<header title="A list of all collectors / collector types that can be added to this agent.">
							<h4>Available collectors</h4>
						</header>
						
						<!-- ko if: AvailableCollectorTypes().length > 0 -->
						<ul data-bind="foreach: AvailableCollectorTypes">
							<li>
								<span data-bind="text: $data"></span>
								<i class="icon-plus-sign" data-bind="click: $parent.AddNewCollectorDefinition.bind($data)"></i>
							</li>
						</ul>
						<!-- /ko -->
						
						<!-- ko if: AvailableCollectorTypes().length == 0 -->
						<div class="noCollectorsAvailable">All collectors are assigned</div>
						<!-- /ko -->
					</section>

					<section class="collectorDefinitions">
						<header title="A list of all collectors that are currently assigned to this agent.">
							<h4>Assigned collectors</h4>
						</header>

						<ul data-bind="foreach: CollectorDefinitions">
							<li>
								<header>
									<span data-bind="text: CollectorType"></span>
									<i class="icon-minus-sign" data-bind="click: $parent.RemoveCollectorDefinition.bind($data)"></i>
								</header>

								<!-- ko if: CollectorType == 'System Performance' -->
								<section class="collectorDefinition systemPerformance">
									
									<div class="inputRow" title="The time between checks in seconds.">
										<label>Check interval</label>
										<input class="checkInterval" type="range" min="1" max="360" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalHumanReadable"></span>
									</div>

								</section>
								<!-- /ko -->
									
								<!-- ko if: CollectorType == 'HTTP Status Code Check' -->
								<section class="collectorDefinition httpStatusCodeCheck">
									
									<div class="inputRow">
										<label>URL</label>
										<input class="urlToCheck" type="text" placeholder="http://10.0.2.14/index.html" data-bind="value: CheckUrl" />
									</div>
									
									<div class="inputRow" title="The host header to use for the HTTP request (default: &lt;empty&gt;).">
										<label>Hostheader</label>
										<input class="hostHeader" type="text" placeholder="example.com" data-bind="value: Hostheader" />
									</div>
									
									<div class="inputRow">
										<label>Expected HTTP Status Code</label>
										<input class="expectedStatusCode" type="text" placeholder="200" data-bind="value: ExpectedStatusCode" />
									</div>
									
									<div class="inputRow" title="The time between checks in seconds.">
										<label>Check interval</label>
										<input class="checkInterval" type="range" min="1" max="360" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalHumanReadable"></span>
									</div>

								</section>
								<!-- /ko -->
									
								<!-- ko if: CollectorType == 'Web Page Content Check' -->
								<section class="collectorDefinition webPageContentCheck">
									
									<div class="inputRow">
										<label>URL</label>
										<input class="urlToCheck" type="text" placeholder="http://10.0.2.14/start-page" data-bind="value: CheckUrl" />
									</div>
									
									<div class="inputRow" title="The host header to use for the HTTP request (default: &lt;empty&gt;).">
										<label>Hostheader</label>
										<input class="hostHeader" type="text" placeholder="example.com" data-bind="value: Hostheader" />
									</div>
									
									<div class="inputRow">
										<label>Regular Expression</label>
										<input class="checkPattern" type="text" placeholder="Cart Content contains \d item" data-bind="value: CheckPattern" />
									</div>
									
									<div class="inputRow" title="The time between checks in seconds.">
										<label>Check interval</label>
										<input class="checkInterval" type="range" min="1" max="360" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalHumanReadable"></span>
									</div>

								</section>
								<!-- /ko -->
									
								<!-- ko if: CollectorType == 'Response Time Check' -->
								<section class="collectorDefinition responseTimeCheck">
									
									<div class="inputRow">
										<label>URL</label>
										<input type="text" placeholder="http://10.0.2.14/start-page" data-bind="value: CheckUrl" />
									</div>
									
									<div class="inputRow" title="The host header to use for the HTTP request (default: &lt;empty&gt;).">
										<label>Hostheader</label>
										<input type="text" placeholder="example.com" data-bind="value: Hostheader" />
									</div>
									
									<div class="inputRow">
										<label>Max response time</label>
										<input type="range" min="1" max="30" data-bind="value: MaxResponseTimeInSeconds" />
										<span data-bind="text: MaxResponseTimeHumanReadable"></span>
									</div>
									
									<div class="inputRow" title="The time between checks in seconds.">
										<label>Check interval</label>
										<input class="checkInterval" type="range" min="1" max="10" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalHumanReadable"></span>
									</div>

								</section>
								<!-- /ko -->

								<!-- ko if: CollectorType == 'Health Page Check' -->
								<section class="collectorDefinition healthPageCheck">
									
									<div class="inputRow">
										<label>URL</label>
										<input type="text" placeholder="http://10.0.2.14/monitoring.axd/json" data-bind="value: CheckUrl" />
									</div>
									
									<div class="inputRow" title="The host header to use for the HTTP request (default: &lt;empty&gt;).">
										<label>Hostheader</label>
										<input type="text" placeholder="example.com" data-bind="value: Hostheader" />
									</div>
									
									<div class="inputRow" title="The maximum response time in seconds.">
										<label>Max response time</label>
										<input type="range" min="1" max="60" data-bind="value: MaxResponseTimeInSeconds" />
										<span data-bind="text: MaxResponseTimeHumanReadable"></span>
									</div>
									
									<div class="inputRow" title="The time between checks in seconds.">
										<label>Check interval</label>
										<input class="checkInterval" type="range" min="60" max="7200" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalHumanReadable"></span>
									</div>

								</section>
								<!-- /ko -->

								<!-- ko if: CollectorType == 'Sql Check' -->
								<section class="collectorDefinition sqlCheck">
									
									<div class="inputRow" title="The connection string of the database that shall be checked by the agent.">
										<label>Connection string</label>
										<input type="text" placeholder="Server=serverAddress;Database=someDatabase;User Id=myUsername;Password=myPassword;" data-bind="value: ConnectionString" />
									</div>
									
									<div class="inputRow" title="The SQL query that shall be executed by the agent.">
										<label>SQL Query</label>
										<input type="text" placeholder="SELECT COUNT(*) FROM Orders WHERE ..." data-bind="value: SqlQuery" />
									</div>
									
									<div class="inputRow" title="The time between checks in seconds.">
										<label>Check interval</label>
										<input class="checkInterval" type="range" min="60" max="7200" data-bind="value: CheckIntervalInSeconds" />
										<span data-bind="text: CheckIntervalHumanReadable"></span>
									</div>

								</section>
								<!-- /ko -->

							</li>
						</ul>
					</section>
					
					<div class="cleaner"></div>

				</section>
			</li>
		</ul>
	</section>

</section>

@section CustomScripts {
	<script type="text/javascript">
		var agentConfigurationOptions = {
			AgentConfigurationApiUrl: '@Url.Action(MVC.Configuration.ActionNames.GetAgentConfiguration)',
			SuccessCallback: function (message) {
				console.log(message);
			},
			ErrorCallback: function (message) {
				$(".agent-configuration:first").html("Cannot load agent configuration from \"{0}\".<br/>The service returned this message:<br/>{1}".format(this.AgentConfigurationApiUrl, message));
			}
		};
	</script>
	<script type="text/javascript" src="@Links.Scripts.Systemmonitor_AgentConfiguration_js"></script>
}
